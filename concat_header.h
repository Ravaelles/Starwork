/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class bwapi_ActionID */

#ifndef _Included_bwapi_ActionID
#define _Included_bwapi_ActionID
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_AIModule */

#ifndef _Included_bwapi_AIModule
#define _Included_bwapi_AIModule
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BestFilter */

#ifndef _Included_bwapi_BestFilter
#define _Included_bwapi_BestFilter
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BestUnitFilter */

#ifndef _Included_bwapi_BestUnitFilter
#define _Included_bwapi_BestUnitFilter
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Bullet */

#ifndef _Included_bwapi_Bullet
#define _Included_bwapi_Bullet
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Bullet
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Bullet_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getPlayer_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getPlayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getType_native
 * Signature: (J)Lbwapi/BulletType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getSource_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getSource_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getAngle_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Bullet_getAngle_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getVelocityX_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Bullet_getVelocityX_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getVelocityY_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Bullet_getVelocityY_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getTarget_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getTarget_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Bullet_getTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    getRemoveTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Bullet_getRemoveTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    exists_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Bullet_exists_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    isVisible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Bullet_isVisible_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Bullet
 * Method:    isVisible_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Bullet_isVisible_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BulletImpl */

#ifndef _Included_bwapi_BulletImpl
#define _Included_bwapi_BulletImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_BulletImpl
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_BulletImpl_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getPlayer_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getPlayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getType_native
 * Signature: (J)Lbwapi/BulletType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getSource_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getSource_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getAngle_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_BulletImpl_getAngle_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getVelocityX_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_BulletImpl_getVelocityX_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getVelocityY_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_BulletImpl_getVelocityY_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getTarget_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getTarget_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_BulletImpl_getTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    getRemoveTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_BulletImpl_getRemoveTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    exists_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_BulletImpl_exists_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    isVisible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_BulletImpl_isVisible_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_BulletImpl
 * Method:    isVisible_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_BulletImpl_isVisible_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Bulletset */

#ifndef _Included_bwapi_Bulletset
#define _Included_bwapi_Bulletset
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BulletType */

#ifndef _Included_bwapi_BulletType
#define _Included_bwapi_BulletType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_BulletType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_BulletType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BWAPI_Key */

#ifndef _Included_bwapi_BWAPI_Key
#define _Included_bwapi_BWAPI_Key
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BWAPI_MouseButton */

#ifndef _Included_bwapi_BWAPI_MouseButton
#define _Included_bwapi_BWAPI_MouseButton
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_BWEventListener */

#ifndef _Included_bwapi_BWEventListener
#define _Included_bwapi_BWEventListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Client */

#ifndef _Included_bwapi_Client
#define _Included_bwapi_Client
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Client
 * Method:    isConnected_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Client_isConnected_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Client
 * Method:    connect_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Client_connect_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Client
 * Method:    disconnect_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Client_disconnect_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Client
 * Method:    update_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Client_update_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Color */

#ifndef _Included_bwapi_Color
#define _Included_bwapi_Color
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_CommandType_Enum */

#ifndef _Included_bwapi_CommandType_Enum
#define _Included_bwapi_CommandType_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_CompareFilter */

#ifndef _Included_bwapi_CompareFilter
#define _Included_bwapi_CompareFilter
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_CoordinateType_Enum */

#ifndef _Included_bwapi_CoordinateType_Enum
#define _Included_bwapi_CoordinateType_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_DamageType */

#ifndef _Included_bwapi_DamageType
#define _Included_bwapi_DamageType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_DamageType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_DamageType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_DefaultBWListener */

#ifndef _Included_bwapi_DefaultBWListener
#define _Included_bwapi_DefaultBWListener
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Enum */

#ifndef _Included_bwapi_Enum
#define _Included_bwapi_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Error */

#ifndef _Included_bwapi_Error
#define _Included_bwapi_Error
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Error
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Error_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Event */

#ifndef _Included_bwapi_Event
#define _Included_bwapi_Event
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Event
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Event_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Event
 * Method:    getText_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Event_getText_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Event
 * Method:    getUnit_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Event_getUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Event
 * Method:    getPlayer_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Event_getPlayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Event
 * Method:    isWinner_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Event_isWinner_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_EventType_Enum */

#ifndef _Included_bwapi_EventType_Enum
#define _Included_bwapi_EventType_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_ExplosionType */

#ifndef _Included_bwapi_ExplosionType
#define _Included_bwapi_ExplosionType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_ExplosionType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_ExplosionType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Flag_Enum */

#ifndef _Included_bwapi_Flag_Enum
#define _Included_bwapi_Flag_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Force */

#ifndef _Included_bwapi_Force
#define _Included_bwapi_Force
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Force
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Force_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Force
 * Method:    getName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Force_getName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Force
 * Method:    getPlayers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Force_getPlayers_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_ForceImpl */

#ifndef _Included_bwapi_ForceImpl
#define _Included_bwapi_ForceImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_ForceImpl
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_ForceImpl_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_ForceImpl
 * Method:    getName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_ForceImpl_getName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_ForceImpl
 * Method:    getPlayers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_ForceImpl_getPlayers_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Forceset */

#ifndef _Included_bwapi_Forceset
#define _Included_bwapi_Forceset
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Forceset
 * Method:    getPlayers_native
 * Signature: (J)Lbwapi/Playerset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Forceset_getPlayers_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Game */

#ifndef _Included_bwapi_Game
#define _Included_bwapi_Game
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Game
 * Method:    getForces_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getForces_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getPlayers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getPlayers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getAllUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getAllUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getStaticMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getStaticMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getStaticGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getStaticGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getStaticNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getStaticNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getBullets_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getBullets_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getNukeDots_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getNukeDots_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getForce_native
 * Signature: (JI)Lbwapi/Force;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getForce_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getPlayer_native
 * Signature: (JI)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getPlayer_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    indexToUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_indexToUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getRegion_native
 * Signature: (JI)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getRegion_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getGameType_native
 * Signature: (J)Lbwapi/GameType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getGameType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getLatency_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getLatency_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getFPS_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getAverageFPS_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Game_getAverageFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getMousePosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getMousePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getMouseState_native
 * Signature: (JLbwapi/MouseButton;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_getMouseState_1native__JLbwapi_MouseButton_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getMouseState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_getMouseState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getKeyState_native
 * Signature: (JLbwapi/Key;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_getKeyState_1native__JLbwapi_Key_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getKeyState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_getKeyState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getScreenPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getScreenPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setScreenPosition_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setScreenPosition_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    setScreenPosition_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setScreenPosition_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    pingMinimap_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_pingMinimap_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    pingMinimap_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_pingMinimap_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    isFlagEnabled_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isFlagEnabled_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    enableFlag_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_enableFlag_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getUnitsOnTile_native
 * Signature: (JII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getUnitsOnTile_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    getUnitsInRectangle_native
 * Signature: (JIIII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getUnitsInRectangle_1native__JIIII
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    getUnitsInRectangle_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getUnitsInRectangle_1native__JLbwapi_Position_2Lbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getUnitsInRadius_native
 * Signature: (JLbwapi/Position;I)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jobject, jint);

/*
 * Class:     bwapi_Game
 * Method:    getLastError_native
 * Signature: (J)Lbwapi/Error;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getLastError_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setLastError_native
 * Signature: (JLbwapi/Error;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setLastError_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    mapWidth_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_mapWidth_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    mapHeight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_mapHeight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    mapFileName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Game_mapFileName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    mapPathName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Game_mapPathName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    mapName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Game_mapName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    mapHash_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Game_mapHash_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isWalkable_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isWalkable_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    isBuildable_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isBuildable_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    isBuildable_native
 * Signature: (JIIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isBuildable_1native__JIIZ
  (JNIEnv *, jobject, jlong, jint, jint, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    isBuildable_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isBuildable_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    isBuildable_native
 * Signature: (JLbwapi/TilePosition;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isBuildable_1native__JLbwapi_TilePosition_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    isVisible_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isVisible_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    isVisible_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isVisible_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    isExplored_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isExplored_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    isExplored_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isExplored_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasCreep_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasCreep_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasCreep_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasCreep_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JLbwapi_TilePosition_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JIIII
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JIIIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JIIIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;II)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JLbwapi_TilePosition_2II
  (JNIEnv *, jobject, jlong, jobject, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;IILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPower_1native__JLbwapi_TilePosition_2IILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPowerPrecise_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPowerPrecise_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasPowerPrecise_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPowerPrecise_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPowerPrecise_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPowerPrecise_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    hasPowerPrecise_native
 * Signature: (JLbwapi/Position;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPowerPrecise_1native__JLbwapi_Position_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    canBuildHere_native
 * Signature: (JLbwapi/Unit;Lbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_canBuildHere_1native__JLbwapi_Unit_2Lbwapi_TilePosition_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    canBuildHere_native
 * Signature: (JLbwapi/Unit;Lbwapi/TilePosition;Lbwapi/UnitType;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_canBuildHere_1native__JLbwapi_Unit_2Lbwapi_TilePosition_2Lbwapi_UnitType_2Z
  (JNIEnv *, jobject, jlong, jobject, jobject, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    canMake_native
 * Signature: (JLbwapi/Unit;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_canMake_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    canResearch_native
 * Signature: (JLbwapi/Unit;Lbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_canResearch_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    canUpgrade_native
 * Signature: (JLbwapi/Unit;Lbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_canUpgrade_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getStartLocations_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getStartLocations_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    printf_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_printf_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_Game
 * Method:    sendText_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_sendText_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_Game
 * Method:    sendTextEx_native
 * Signature: (JZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_sendTextEx_1native
  (JNIEnv *, jobject, jlong, jboolean, jstring);

/*
 * Class:     bwapi_Game
 * Method:    changeRace_native
 * Signature: (JLbwapi/Race;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_changeRace_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    isInGame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isInGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isMultiplayer_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isMultiplayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isBattleNet_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isBattleNet_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isPaused_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isPaused_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isReplay_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isReplay_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    startGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_startGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    pauseGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_pauseGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    resumeGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_resumeGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    leaveGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_leaveGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    restartGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_restartGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setLocalSpeed_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setLocalSpeed_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setLocalSpeed_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setLocalSpeed_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    issueCommand_native
 * Signature: (JLjava/util/List;Lbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getSelectedUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getSelectedUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    self_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_self_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    enemy_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_enemy_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    neutral_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_neutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    allies_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_allies_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    enemies_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_enemies_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    observers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_observers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setTextSize_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setTextSize_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setTextSize_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setTextSize_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    drawText_native
 * Signature: (JIIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawText_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jstring);

/*
 * Class:     bwapi_Game
 * Method:    drawTextMap_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTextMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_Game
 * Method:    drawTextMouse_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTextMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_Game
 * Method:    drawTextScreen_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTextScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_Game
 * Method:    drawBox_native
 * Signature: (JIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBox_1native__JIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawBox_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBox_1native__JIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxMap_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxMap_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxMap_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxMouse_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxMouse_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxMouse_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxScreen_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxScreen_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawBoxScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawBoxScreen_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangle_native
 * Signature: (JIIIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangle_1native__JIIIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangle_native
 * Signature: (JIIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangle_1native__JIIIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleMap_native
 * Signature: (JIIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleMap_1native__JIIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleMap_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleMap_1native__JIIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleMouse_native
 * Signature: (JIIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleMouse_1native__JIIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleMouse_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleMouse_1native__JIIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleScreen_native
 * Signature: (JIIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleScreen_1native__JIIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawTriangleScreen_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawTriangleScreen_1native__JIIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawCircle_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircle_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawCircle_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircle_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleMap_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleMap_1native__JIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleMap_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleMap_1native__JIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleMouse_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleMouse_1native__JIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleMouse_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleMouse_1native__JIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleScreen_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleScreen_1native__JIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawCircleScreen_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawCircleScreen_1native__JIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipse_native
 * Signature: (JIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipse_1native__JIIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipse_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipse_1native__JIIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseMap_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseMap_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseMap_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseMouse_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseMouse_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseMouse_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseScreen_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseScreen_1native__JIIIILbwapi_Color_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawEllipseScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawEllipseScreen_1native__JIIIILbwapi_Color_2Z
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    drawDot_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawDot_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawDotMap_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawDotMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawDotMouse_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawDotMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawDotScreen_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawDotScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawLine_native
 * Signature: (JIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawLine_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawLineMap_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawLineMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawLineMouse_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawLineMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    drawLineScreen_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_drawLineScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getScreenBuffer_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_getScreenBuffer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getLatencyFrames_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getLatencyFrames_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getLatencyTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getLatencyTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getRemainingLatencyFrames_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getRemainingLatencyFrames_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getRemainingLatencyTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getRemainingLatencyTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getRevision_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getRevision_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isDebug_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isDebug_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    isLatComEnabled_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_isLatComEnabled_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setLatCom_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setLatCom_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    getReplayFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getReplayFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setGUI_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setGUI_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setGUI_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setGUI_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    getAPM_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getAPM_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    getAPM_native
 * Signature: (JZ)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getAPM_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    setMap_native
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setMap_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_Game
 * Method:    setFrameSkip_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setFrameSkip_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setFrameSkip_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setFrameSkip_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    hasPath_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_hasPath_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Game
 * Method:    setAlliance_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setAlliance_1native__JLbwapi_Player_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    setAlliance_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setAlliance_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    setAlliance_native
 * Signature: (JLbwapi/Player;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setAlliance_1native__JLbwapi_Player_2ZZ
  (JNIEnv *, jobject, jlong, jobject, jboolean, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    setVision_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setVision_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    setVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setVision_1native__JLbwapi_Player_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    setCommandOptimizationLevel_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setCommandOptimizationLevel_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setCommandOptimizationLevel_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Game_setCommandOptimizationLevel_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Game
 * Method:    getRegionAt_native
 * Signature: (JII)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getRegionAt_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Game
 * Method:    getRegionAt_native
 * Signature: (JLbwapi/Position;)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Game_getRegionAt_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    getLastEventTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Game_getLastEventTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setReplayVision_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setReplayVision_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Game
 * Method:    setReplayVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setReplayVision_1native__JLbwapi_Player_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Game
 * Method:    setRevealAll_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setRevealAll_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Game
 * Method:    setRevealAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Game_setRevealAll_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_GameImpl */

#ifndef _Included_bwapi_GameImpl
#define _Included_bwapi_GameImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchStart_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchStart_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchEnd_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchEnd_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    onMatchFrame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_onMatchFrame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    _unitFromIndex_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl__1unitFromIndex_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getForces_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getForces_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getPlayers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getPlayers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getAllUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getAllUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticMinerals_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticGeysers_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticGeysers_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStaticNeutralUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStaticNeutralUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getBullets_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getBullets_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getNukeDots_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getNukeDots_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getForce_native
 * Signature: (JI)Lbwapi/Force;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getForce_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getPlayer_native
 * Signature: (JI)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getPlayer_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    indexToUnit_native
 * Signature: (JI)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_indexToUnit_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getRegion_native
 * Signature: (JI)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getRegion_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getGameType_native
 * Signature: (J)Lbwapi/GameType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getGameType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLatency_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getLatency_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getReplayFrameCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getReplayFrameCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getFPS_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getAverageFPS_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_GameImpl_getAverageFPS_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMouseState_native
 * Signature: (JLbwapi/MouseButton;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getMouseState_1native__JLbwapi_MouseButton_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getMouseState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getMouseState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getKeyState_native
 * Signature: (JLbwapi/Key;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getKeyState_1native__JLbwapi_Key_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getKeyState_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_getKeyState_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    setScreenPosition_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setScreenPosition_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    setScreenPosition_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setScreenPosition_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    pingMinimap_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pingMinimap_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    pingMinimap_native
 * Signature: (JLbwapi/Position;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pingMinimap_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsOnTile_native
 * Signature: (JII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsOnTile_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRectangle_native
 * Signature: (JIIII)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRectangle_1native__JIIII
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRectangle_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRectangle_1native__JLbwapi_Position_2Lbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getUnitsInRadius_native
 * Signature: (JLbwapi/Position;I)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jobject, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLastError_native
 * Signature: (J)Lbwapi/Error;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getLastError_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapFileName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapFileName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapPathName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapPathName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    mapHash_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameImpl_mapHash_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isWalkable_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isWalkable_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBuildable_native
 * Signature: (JIIZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBuildable_1native__JIIZ
  (JNIEnv *, jobject, jlong, jint, jint, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBuildable_native
 * Signature: (JLbwapi/TilePosition;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBuildable_1native__JLbwapi_TilePosition_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isVisible_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isVisible_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isVisible_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isVisible_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    isExplored_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isExplored_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    isExplored_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isExplored_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasCreep_native
 * Signature: (JII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasCreep_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasCreep_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasCreep_1native__JLbwapi_TilePosition_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JLbwapi_TilePosition_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JIIIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JIIIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPower_native
 * Signature: (JLbwapi/TilePosition;IILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPower_1native__JLbwapi_TilePosition_2IILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPowerPrecise_native
 * Signature: (JIILbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPowerPrecise_1native__JIILbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPowerPrecise_native
 * Signature: (JLbwapi/Position;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPowerPrecise_1native__JLbwapi_Position_2Lbwapi_UnitType_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canBuildHere_native
 * Signature: (JLbwapi/Unit;Lbwapi/TilePosition;Lbwapi/UnitType;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canBuildHere_1native
  (JNIEnv *, jobject, jlong, jobject, jobject, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    canMake_native
 * Signature: (JLbwapi/Unit;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canMake_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canResearch_native
 * Signature: (JLbwapi/Unit;Lbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canResearch_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    canUpgrade_native
 * Signature: (JLbwapi/Unit;Lbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_canUpgrade_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getStartLocations_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_getStartLocations_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    printf_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_printf_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    sendText_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_sendText_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    sendTextEx_native
 * Signature: (JZLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_sendTextEx_1native
  (JNIEnv *, jobject, jlong, jboolean, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    changeRace_native
 * Signature: (JLbwapi/Race;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_changeRace_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    isInGame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isInGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isMultiplayer_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isMultiplayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isBattleNet_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isBattleNet_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isPaused_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isPaused_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isReplay_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isReplay_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    startGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_startGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    pauseGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_pauseGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    resumeGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_resumeGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    leaveGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_leaveGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    restartGame_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_restartGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setLocalSpeed_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setLocalSpeed_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    issueCommand_native
 * Signature: (JLjava/util/List;Lbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    self_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_self_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    enemy_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_enemy_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    neutral_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_GameImpl_neutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setTextSize_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setTextSize_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawText_native
 * Signature: (JIIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawText_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextMap_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextMouse_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTextScreen_native
 * Signature: (JIILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTextScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBox_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBox_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawBoxScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawBoxScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangle_native
 * Signature: (JIIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangle_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleMap_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleMouse_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawTriangleScreen_native
 * Signature: (JIIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawTriangleScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircle_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircle_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleMap_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleMouse_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawCircleScreen_native
 * Signature: (JIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawCircleScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipse_native
 * Signature: (JIIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseMap_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseMouse_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawEllipseScreen_native
 * Signature: (JIIIILbwapi/Color;Z)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawEllipseScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDot_native
 * Signature: (JIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDot_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotMap_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotMouse_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawDotScreen_native
 * Signature: (JIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawDotScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLine_native
 * Signature: (JIIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLine_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineMap_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineMap_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineMouse_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineMouse_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    drawLineScreen_native
 * Signature: (JIIIILbwapi/Color;)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_drawLineScreen_1native
  (JNIEnv *, jobject, jlong, jint, jint, jint, jint, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    getScreenBuffer_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_getScreenBuffer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isDebug_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isDebug_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    isLatComEnabled_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isLatComEnabled_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setLatCom_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setLatCom_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    isGUIEnabled_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_isGUIEnabled_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setGUI_native
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setGUI_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setMap_native
 * Signature: (JLjava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setMap_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwapi_GameImpl
 * Method:    setFrameSkip_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setFrameSkip_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    hasPath_native
 * Signature: (JLbwapi/Position;Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_hasPath_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_GameImpl
 * Method:    setAlliance_native
 * Signature: (JLbwapi/Player;ZZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setAlliance_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setVision_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setCommandOptimizationLevel_native
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameImpl_setCommandOptimizationLevel_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_GameImpl
 * Method:    getLastEventTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_GameImpl_getLastEventTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_GameImpl
 * Method:    setReplayVision_native
 * Signature: (JLbwapi/Player;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setReplayVision_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_GameImpl
 * Method:    setRevealAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_GameImpl_setRevealAll_1native
  (JNIEnv *, jobject, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_GameType */

#ifndef _Included_bwapi_GameType
#define _Included_bwapi_GameType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_GameType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_GameType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_GameWrapper */

#ifndef _Included_bwapi_GameWrapper
#define _Included_bwapi_GameWrapper
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_GameWrapper
 * Method:    flush_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_GameWrapper_flush_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_InterfaceEvent */

#ifndef _Included_bwapi_InterfaceEvent
#define _Included_bwapi_InterfaceEvent
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_InterfaceEvent
 * Method:    isFinished_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_InterfaceEvent_isFinished_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_InterfaceEvent
 * Method:    removeEvent_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_InterfaceEvent_removeEvent_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Key */

#ifndef _Included_bwapi_Key
#define _Included_bwapi_Key
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Latency_Enum */

#ifndef _Included_bwapi_Latency_Enum
#define _Included_bwapi_Latency_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Mirror_FrameCallback */

#ifndef _Included_bwapi_Mirror_FrameCallback
#define _Included_bwapi_Mirror_FrameCallback
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Mirror_JarResources */

#ifndef _Included_bwapi_Mirror_JarResources
#define _Included_bwapi_Mirror_JarResources
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Mirror */

#ifndef _Included_bwapi_Mirror
#define _Included_bwapi_Mirror
#ifdef __cplusplus
extern "C" {
#endif
#undef bwapi_Mirror_EXTRACT_JAR
#define bwapi_Mirror_EXTRACT_JAR 1L
/*
 * Class:     bwapi_Mirror
 * Method:    startGame
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_bwapi_Mirror_startGame
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_MouseButton */

#ifndef _Included_bwapi_MouseButton
#define _Included_bwapi_MouseButton
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Order */

#ifndef _Included_bwapi_Order
#define _Included_bwapi_Order
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Order
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Order_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Player */

#ifndef _Included_bwapi_Player
#define _Included_bwapi_Player
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Player
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Player_getName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getRace_native
 * Signature: (J)Lbwapi/Race;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getRace_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getType_native
 * Signature: (J)Lbwapi/PlayerType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getForce_native
 * Signature: (J)Lbwapi/Force;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getForce_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    isAlly_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isAlly_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    isEnemy_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isEnemy_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    isNeutral_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isNeutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getStartLocation_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getStartLocation_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    isVictorious_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isVictorious_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    isDefeated_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isDefeated_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    leftGame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_leftGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    minerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_minerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    gas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_gas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    gatheredMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_gatheredMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    gatheredGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_gatheredGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    repairedMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_repairedMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    repairedGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_repairedGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    refundedMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_refundedMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    refundedGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_refundedGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    spentMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_spentMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    spentGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_spentGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    supplyTotal_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_supplyTotal_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    supplyTotal_native
 * Signature: (JLbwapi/Race;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_supplyTotal_1native__JLbwapi_Race_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    supplyUsed_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_supplyUsed_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    supplyUsed_native
 * Signature: (JLbwapi/Race;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_supplyUsed_1native__JLbwapi_Race_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    allUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_allUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    visibleUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_visibleUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    completedUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_completedUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    incompleteUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_incompleteUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    deadUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_deadUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    killedUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_killedUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    hasResearched_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_hasResearched_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    isResearching_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isResearching_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    isUpgrading_native
 * Signature: (JLbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isUpgrading_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    getColor_native
 * Signature: (J)Lbwapi/Color;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Player_getColor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getTextColor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getTextColor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    maxEnergy_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_maxEnergy_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    topSpeed_native
 * Signature: (JLbwapi/UnitType;)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Player_topSpeed_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    groundWeaponMaxRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_groundWeaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    airWeaponMaxRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_airWeaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    weaponMaxRange_native
 * Signature: (JLbwapi/WeaponType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_weaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    sightRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_sightRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    groundWeaponDamageCooldown_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_groundWeaponDamageCooldown_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    armor_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_armor_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    getUnitScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getUnitScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getKillScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getKillScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getBuildingScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getBuildingScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getRazingScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getRazingScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    getCustomScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Player_getCustomScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    isObserver_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isObserver_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Player
 * Method:    isResearchAvailable_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isResearchAvailable_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Player
 * Method:    isUnitAvailable_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Player_isUnitAvailable_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_PlayerImpl */

#ifndef _Included_bwapi_PlayerImpl
#define _Included_bwapi_PlayerImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_PlayerImpl
 * Method:    clear_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_PlayerImpl_clear_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getName_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_PlayerImpl_getName_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PlayerImpl_getUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getRace_native
 * Signature: (J)Lbwapi/Race;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PlayerImpl_getRace_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getType_native
 * Signature: (J)Lbwapi/PlayerType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PlayerImpl_getType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getForce_native
 * Signature: (J)Lbwapi/Force;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PlayerImpl_getForce_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isAlly_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isAlly_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isEnemy_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isEnemy_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isNeutral_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isNeutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getStartLocation_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PlayerImpl_getStartLocation_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isVictorious_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isVictorious_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isDefeated_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isDefeated_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    leftGame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_leftGame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    minerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_minerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    gas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_gas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    gatheredMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_gatheredMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    gatheredGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_gatheredGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    repairedMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_repairedMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    repairedGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_repairedGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    refundedMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_refundedMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    refundedGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_refundedGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    spentMinerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_spentMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    spentGas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_spentGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    supplyTotal_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_supplyTotal_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    supplyUsed_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_supplyUsed_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    supplyTotal_native
 * Signature: (JLbwapi/Race;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_supplyTotal_1native__JLbwapi_Race_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    supplyUsed_native
 * Signature: (JLbwapi/Race;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_supplyUsed_1native__JLbwapi_Race_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    allUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_allUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    visibleUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_visibleUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    completedUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_completedUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    incompleteUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_incompleteUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    deadUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_deadUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    killedUnitCount_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_killedUnitCount_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    hasResearched_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_hasResearched_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isResearching_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isResearching_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isUpgrading_native
 * Signature: (JLbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isUpgrading_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getTextColor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getTextColor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    maxEnergy_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_maxEnergy_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    topSpeed_native
 * Signature: (JLbwapi/UnitType;)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_PlayerImpl_topSpeed_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    groundWeaponMaxRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_groundWeaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    airWeaponMaxRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_airWeaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    weaponMaxRange_native
 * Signature: (JLbwapi/WeaponType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_weaponMaxRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    sightRange_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_sightRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    groundWeaponDamageCooldown_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_groundWeaponDamageCooldown_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    armor_native
 * Signature: (JLbwapi/UnitType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_armor_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getUnitScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getUnitScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getKillScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getKillScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getBuildingScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getBuildingScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getRazingScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getRazingScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    getCustomScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_PlayerImpl_getCustomScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isObserver_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isObserver_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isResearchAvailable_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isResearchAvailable_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_PlayerImpl
 * Method:    isUnitAvailable_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PlayerImpl_isUnitAvailable_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Playerset */

#ifndef _Included_bwapi_Playerset
#define _Included_bwapi_Playerset
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Playerset
 * Method:    getUnits_native
 * Signature: (J)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Playerset_getUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Playerset
 * Method:    setAlliance_native
 * Signature: (JZZ)V
 */
JNIEXPORT void JNICALL Java_bwapi_Playerset_setAlliance_1native
  (JNIEnv *, jobject, jlong, jboolean, jboolean);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_PlayerType */

#ifndef _Included_bwapi_PlayerType
#define _Included_bwapi_PlayerType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_PlayerType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_PlayerType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Point */

#ifndef _Included_bwapi_Point
#define _Included_bwapi_Point
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Point
 * Method:    isValid_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Point_isValid_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Point
 * Method:    getDistance_native
 * Signature: (JLbwapi/Point;)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Point_getDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Point
 * Method:    getLength_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Point_getLength_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Point
 * Method:    getApproxDistance_native
 * Signature: (JLbwapi/Point;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Point_getApproxDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Position */

#ifndef _Included_bwapi_Position
#define _Included_bwapi_Position
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Position
 * Method:    isValid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Position_isValid
  (JNIEnv *, jobject);

/*
 * Class:     bwapi_Position
 * Method:    makeValid
 * Signature: ()Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Position_makeValid
  (JNIEnv *, jobject);

/*
 * Class:     bwapi_Position
 * Method:    getDistance
 * Signature: (Lbwapi/Position;)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Position_getDistance
  (JNIEnv *, jobject, jobject);

/*
 * Class:     bwapi_Position
 * Method:    getApproxDistance
 * Signature: (Lbwapi/Position;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Position_getApproxDistance
  (JNIEnv *, jobject, jobject);

/*
 * Class:     bwapi_Position
 * Method:    getLength
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Position_getLength
  (JNIEnv *, jobject);

/*
 * Class:     bwapi_Position
 * Method:    hasPath
 * Signature: (Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Position_hasPath
  (JNIEnv *, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_PositionOrUnit */

#ifndef _Included_bwapi_PositionOrUnit
#define _Included_bwapi_PositionOrUnit
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_PositionOrUnit
 * Method:    isUnit_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PositionOrUnit_isUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PositionOrUnit
 * Method:    getUnit_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PositionOrUnit_getUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PositionOrUnit
 * Method:    isPosition_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_PositionOrUnit_isPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_PositionOrUnit
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_PositionOrUnit_getPosition_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Race */

#ifndef _Included_bwapi_Race
#define _Included_bwapi_Race
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Race
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_Race_c_1str_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Race
 * Method:    getWorker_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Race_getWorker_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Race
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Race_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Race
 * Method:    getRefinery_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Race_getRefinery_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Race
 * Method:    getTransport_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Race_getTransport_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Race
 * Method:    getSupplyProvider_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Race_getSupplyProvider_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Region */

#ifndef _Included_bwapi_Region
#define _Included_bwapi_Region
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Region
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getRegionGroupID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getRegionGroupID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Region_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    isHigherGround_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Region_isHigherGround_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getDefensePriority_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getDefensePriority_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    isWalkable_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Region_isWalkable_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getBoundsLeft_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getBoundsLeft_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getBoundsTop_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getBoundsTop_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getBoundsRight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getBoundsRight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getBoundsBottom_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getBoundsBottom_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getClosestAccessibleRegion_native
 * Signature: (J)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Region_getClosestAccessibleRegion_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getClosestInaccessibleRegion_native
 * Signature: (J)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Region_getClosestInaccessibleRegion_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Region
 * Method:    getDistance_native
 * Signature: (JLbwapi/Region;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Region_getDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_RegionImpl */

#ifndef _Included_bwapi_RegionImpl
#define _Included_bwapi_RegionImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_RegionImpl
 * Method:    setNeighbors_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_RegionImpl_setNeighbors_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getRegionGroupID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getRegionGroupID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    isHigherGround_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_RegionImpl_isHigherGround_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getDefensePriority_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getDefensePriority_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    isWalkable_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_RegionImpl_isWalkable_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getBoundsLeft_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getBoundsLeft_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getBoundsTop_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getBoundsTop_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getBoundsRight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getBoundsRight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getBoundsBottom_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getBoundsBottom_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_RegionImpl
 * Method:    getDistance_native
 * Signature: (JLbwapi/Region;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_RegionImpl_getDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Regionset */

#ifndef _Included_bwapi_Regionset
#define _Included_bwapi_Regionset
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Regionset
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Regionset_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Regionset
 * Method:    getUnits_native
 * Signature: (JLbwapi/UnitFilter;)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Regionset_getUnits_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_ShapeType_Enum */

#ifndef _Included_bwapi_ShapeType_Enum
#define _Included_bwapi_ShapeType_Enum
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_TechType */

#ifndef _Included_bwapi_TechType
#define _Included_bwapi_TechType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_TechType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_TechType_c_1str_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    getRace_native
 * Signature: (J)Lbwapi/Race;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TechType_getRace_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    mineralPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_TechType_mineralPrice_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    gasPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_TechType_gasPrice_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    researchTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_TechType_researchTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    energyUsed_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_TechType_energyUsed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    whatResearches_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TechType_whatResearches_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    getWeapon_native
 * Signature: (J)Lbwapi/WeaponType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TechType_getWeapon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    targetsUnit_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_TechType_targetsUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    targetsPosition_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_TechType_targetsPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    whatUses_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TechType_whatUses_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_TechType
 * Method:    getOrder_native
 * Signature: (J)Lbwapi/Order;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TechType_getOrder_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_TilePosition */

#ifndef _Included_bwapi_TilePosition
#define _Included_bwapi_TilePosition
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_TilePosition
 * Method:    hasPath
 * Signature: (Lbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_TilePosition_hasPath
  (JNIEnv *, jobject, jobject);

/*
 * Class:     bwapi_TilePosition
 * Method:    isValid
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_TilePosition_isValid
  (JNIEnv *, jobject);

/*
 * Class:     bwapi_TilePosition
 * Method:    makeValid
 * Signature: ()Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_TilePosition_makeValid
  (JNIEnv *, jobject);

/*
 * Class:     bwapi_TilePosition
 * Method:    getDistance
 * Signature: (Lbwapi/TilePosition;)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_TilePosition_getDistance
  (JNIEnv *, jobject, jobject);

/*
 * Class:     bwapi_TilePosition
 * Method:    getLength
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_TilePosition_getLength
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_TournamentModule */

#ifndef _Included_bwapi_TournamentModule
#define _Included_bwapi_TournamentModule
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_TournamentModule
 * Method:    onFirstAdvertisement_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_TournamentModule_onFirstAdvertisement_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Tournament_ActionID */

#ifndef _Included_bwapi_Tournament_ActionID
#define _Included_bwapi_Tournament_ActionID
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnaryFilter */

#ifndef _Included_bwapi_UnaryFilter
#define _Included_bwapi_UnaryFilter
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Unit */

#ifndef _Included_bwapi_Unit
#define _Included_bwapi_Unit
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Unit
 * Method:    getID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getReplayID_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getReplayID_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getPlayer_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getPlayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getType_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTilePosition_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getTilePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getAngle_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Unit_getAngle_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getVelocityX_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Unit_getVelocityX_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getVelocityY_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_Unit_getVelocityY_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRegion_native
 * Signature: (J)Lbwapi/Region;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getRegion_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getLeft_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getLeft_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTop_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getTop_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getBottom_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getBottom_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getHitPoints_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getHitPoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getShields_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getShields_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getEnergy_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getEnergy_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getResources_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getResources_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getResourceGroup_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getResourceGroup_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getDistance_native
 * Signature: (JLbwapi/Unit;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getDistance_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    getDistance_native
 * Signature: (JLbwapi/Position;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getDistance_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    hasPath_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_hasPath_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    hasPath_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_hasPath_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    getLastCommandFrame_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getLastCommandFrame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getLastAttackingPlayer_native
 * Signature: (J)Lbwapi/Player;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getLastAttackingPlayer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getUpgradeLevel_native
 * Signature: (JLbwapi/UpgradeType;)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getUpgradeLevel_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    getInitialType_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getInitialType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInitialPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getInitialPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInitialTilePosition_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getInitialTilePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInitialHitPoints_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getInitialHitPoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInitialResources_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getInitialResources_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getKillCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getKillCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getAcidSporeCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getAcidSporeCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInterceptorCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getInterceptorCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getScarabCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getScarabCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getSpiderMineCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getSpiderMineCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getGroundWeaponCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getGroundWeaponCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getAirWeaponCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getAirWeaponCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getSpellCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getSpellCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getDefenseMatrixPoints_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getDefenseMatrixPoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getDefenseMatrixTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getDefenseMatrixTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getEnsnareTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getEnsnareTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getIrradiateTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getIrradiateTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getLockdownTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getLockdownTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getMaelstromTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getMaelstromTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getOrderTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getOrderTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getPlagueTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getPlagueTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRemoveTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRemoveTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getStasisTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getStasisTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getStimTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getStimTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getBuildType_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getBuildType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTech_native
 * Signature: (J)Lbwapi/TechType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getTech_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getUpgrade_native
 * Signature: (J)Lbwapi/UpgradeType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getUpgrade_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRemainingBuildTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRemainingBuildTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRemainingTrainTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRemainingTrainTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRemainingResearchTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRemainingResearchTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRemainingUpgradeTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_Unit_getRemainingUpgradeTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getBuildUnit_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getBuildUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTarget_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getTarget_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getOrder_native
 * Signature: (J)Lbwapi/Order;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getOrder_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getSecondaryOrder_native
 * Signature: (J)Lbwapi/Order;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getSecondaryOrder_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getOrderTarget_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getOrderTarget_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getOrderTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getOrderTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRallyPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getRallyPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getRallyUnit_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getRallyUnit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getAddon_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getAddon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getNydusExit_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getNydusExit_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getPowerUp_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getPowerUp_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getTransport_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getTransport_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getLoadedUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getLoadedUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getCarrier_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getCarrier_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getInterceptors_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getInterceptors_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getHatchery_native
 * Signature: (J)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getHatchery_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getLarva_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getLarva_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    getUnitsInRadius_native
 * Signature: (JI)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Unit
 * Method:    getUnitsInWeaponRange_native
 * Signature: (JLbwapi/WeaponType;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unit_getUnitsInWeaponRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    exists_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_exists_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    hasNuke_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_hasNuke_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isAccelerating_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isAccelerating_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isAttacking_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isAttacking_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isAttackFrame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isAttackFrame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBeingConstructed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBeingConstructed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBeingGathered_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBeingGathered_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBeingHealed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBeingHealed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBlind_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBlind_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBraking_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBraking_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isBurrowed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isBurrowed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isCarryingGas_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isCarryingGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isCarryingMinerals_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isCarryingMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isCloaked_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isCloaked_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isCompleted_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isCompleted_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isConstructing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isConstructing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isDefenseMatrixed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isDefenseMatrixed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isDetected_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isDetected_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isEnsnared_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isEnsnared_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isFollowing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isFollowing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isGatheringGas_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isGatheringGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isGatheringMinerals_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isGatheringMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isHallucination_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isHallucination_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isHoldingPosition_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isHoldingPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isIdle_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isIdle_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isInterruptible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isInterruptible_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isInvincible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isInvincible_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isInWeaponRange_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isInWeaponRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    isIrradiated_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isIrradiated_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isLifted_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isLifted_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isLoaded_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isLoaded_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isLockedDown_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isLockedDown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isMaelstrommed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isMaelstrommed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isMorphing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isMorphing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isMoving_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isMoving_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isParasited_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isParasited_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isPatrolling_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isPatrolling_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isPlagued_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isPlagued_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isRepairing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isRepairing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isResearching_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isResearching_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isSelected_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isSelected_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isSieged_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isSieged_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isStartingAttack_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isStartingAttack_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isStasised_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isStasised_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isStimmed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isStimmed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isStuck_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isStuck_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isTraining_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isTraining_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUnderAttack_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUnderAttack_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUnderDarkSwarm_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUnderDarkSwarm_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUnderDisruptionWeb_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUnderDisruptionWeb_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUnderStorm_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUnderStorm_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUnpowered_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUnpowered_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isUpgrading_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isUpgrading_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isVisible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isVisible_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    isVisible_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_isVisible_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    canIssueCommand_native
 * Signature: (JLbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_canIssueCommand_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    issueCommand_native
 * Signature: (JLbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    attack_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_attack_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    attack_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_attack_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    attack_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_attack_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    attack_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_attack_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    build_native
 * Signature: (JLbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_build_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    buildAddon_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_buildAddon_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    train_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_train_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    morph_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_morph_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    research_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_research_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    upgrade_native
 * Signature: (JLbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_upgrade_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    setRallyPoint_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_setRallyPoint_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    setRallyPoint_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_setRallyPoint_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    move_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_move_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    move_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_move_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    patrol_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_patrol_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    patrol_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_patrol_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    holdPosition_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_holdPosition_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    holdPosition_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_holdPosition_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    stop_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_stop_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    stop_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_stop_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    follow_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_follow_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    follow_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_follow_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    gather_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_gather_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    gather_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_gather_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    returnCargo_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_returnCargo_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    returnCargo_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_returnCargo_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    repair_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_repair_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    repair_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_repair_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    burrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_burrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    unburrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unburrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    decloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_decloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    siege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_siege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    unsiege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unsiege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    lift_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_lift_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    land_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_land_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    load_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_load_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    load_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_load_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    unload_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unload_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    unloadAll_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unloadAll_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    unloadAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unloadAll_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    unloadAll_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unloadAll_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    unloadAll_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_unloadAll_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    rightClick_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_rightClick_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    rightClick_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_rightClick_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    rightClick_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_rightClick_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    rightClick_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_rightClick_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unit
 * Method:    haltConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_haltConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelAddon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelAddon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelTrain_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelTrain_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelTrain_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelTrain_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Unit
 * Method:    cancelMorph_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelMorph_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelResearch_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelResearch_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    cancelUpgrade_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_cancelUpgrade_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unit
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_useTech_1native__JLbwapi_TechType_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_useTech_1native__JLbwapi_TechType_2Lbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;Lbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_useTech_1native__JLbwapi_TechType_2Lbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Unit
 * Method:    placeCOP_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unit_placeCOP_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitCommand */

#ifndef _Included_bwapi_UnitCommand
#define _Included_bwapi_UnitCommand
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UnitCommand
 * Method:    getType_native
 * Signature: (J)Lbwapi/UnitCommandType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitCommand_getType_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitCommandType */

#ifndef _Included_bwapi_UnitCommandType
#define _Included_bwapi_UnitCommandType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UnitCommandType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_UnitCommandType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitFilter */

#ifndef _Included_bwapi_UnitFilter
#define _Included_bwapi_UnitFilter
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitImpl */

#ifndef _Included_bwapi_UnitImpl
#define _Included_bwapi_UnitImpl
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UnitImpl
 * Method:    clear_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_UnitImpl_clear_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    saveInitialState_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_UnitImpl_saveInitialState_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getTilePosition_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getTilePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getInitialTilePosition_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getInitialTilePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getKillCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getKillCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getAcidSporeCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getAcidSporeCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getInterceptorCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getInterceptorCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getScarabCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getScarabCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getSpiderMineCount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getSpiderMineCount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getGroundWeaponCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getGroundWeaponCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getAirWeaponCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getAirWeaponCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getSpellCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getSpellCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getDefenseMatrixPoints_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getDefenseMatrixPoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getDefenseMatrixTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getDefenseMatrixTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getEnsnareTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getEnsnareTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getIrradiateTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getIrradiateTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getLockdownTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getLockdownTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getMaelstromTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getMaelstromTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getOrderTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getOrderTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getPlagueTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getPlagueTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getRemoveTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getRemoveTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getStasisTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getStasisTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getStimTimer_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitImpl_getStimTimer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getOrderTargetPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getOrderTargetPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getRallyPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getRallyPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getLoadedUnits_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getLoadedUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getInterceptors_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getInterceptors_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getLarva_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getLarva_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getUnitsInRadius_native
 * Signature: (JI)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getUnitsInWeaponRange_native
 * Signature: (JLbwapi/WeaponType;)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitImpl_getUnitsInWeaponRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    getClientInfo_native
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_bwapi_UnitImpl_getClientInfo_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    exists_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_exists_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    hasNuke_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_hasNuke_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isAccelerating_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isAccelerating_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isAttackFrame_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isAttackFrame_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isAttacking_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isAttacking_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBeingConstructed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBeingConstructed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBeingGathered_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBeingGathered_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBeingHealed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBeingHealed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBlind_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBlind_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBraking_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBraking_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isBurrowed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isBurrowed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isCarryingGas_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isCarryingGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isCarryingMinerals_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isCarryingMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isCloaked_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isCloaked_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isCompleted_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isCompleted_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isConstructing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isConstructing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isDefenseMatrixed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isDefenseMatrixed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isDetected_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isDetected_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isEnsnared_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isEnsnared_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isFollowing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isFollowing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isGatheringGas_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isGatheringGas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isGatheringMinerals_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isGatheringMinerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isHallucination_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isHallucination_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isHoldingPosition_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isHoldingPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isIdle_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isIdle_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isInWeaponRange_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isInWeaponRange_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isInterruptible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isInterruptible_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isInvincible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isInvincible_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isIrradiated_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isIrradiated_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isLifted_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isLifted_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isLoaded_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isLoaded_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isLockedDown_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isLockedDown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isMaelstrommed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isMaelstrommed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isMorphing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isMorphing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isMoving_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isMoving_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isParasited_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isParasited_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isPatrolling_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isPatrolling_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isPlagued_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isPlagued_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isRepairing_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isRepairing_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isResearching_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isResearching_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isSelected_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isSelected_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isSieged_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isSieged_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isStartingAttack_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isStartingAttack_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isStasised_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isStasised_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isStimmed_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isStimmed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isStuck_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isStuck_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isTraining_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isTraining_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUnderAttack_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUnderAttack_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUnderDarkSwarm_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUnderDarkSwarm_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUnderDisruptionWeb_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUnderDisruptionWeb_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUnderStorm_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUnderStorm_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUnpowered_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUnpowered_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isUpgrading_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isUpgrading_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isVisible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isVisible_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    isVisible_native
 * Signature: (JLbwapi/Player;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_isVisible_1native__JLbwapi_Player_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    canIssueCommand_native
 * Signature: (JLbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_canIssueCommand_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    issueCommand_native
 * Signature: (JLbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    attack_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_attack_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    attack_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_attack_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    build_native
 * Signature: (JLbwapi/TilePosition;Lbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_build_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    buildAddon_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_buildAddon_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    train_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_train_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    morph_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_morph_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    research_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_research_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    upgrade_native
 * Signature: (JLbwapi/UpgradeType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_upgrade_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    setRallyPoint_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_setRallyPoint_1native__JLbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    setRallyPoint_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_setRallyPoint_1native__JLbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    move_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_move_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    patrol_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_patrol_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    holdPosition_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_holdPosition_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    stop_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_stop_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    follow_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_follow_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    gather_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_gather_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    returnCargo_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_returnCargo_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    repair_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_repair_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    burrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_burrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    unburrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_unburrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    decloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_decloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    siege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_siege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    unsiege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_unsiege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    lift_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_lift_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    land_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_land_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    load_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_load_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    unload_native
 * Signature: (JLbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_unload_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    unloadAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_unloadAll_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    unloadAll_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_unloadAll_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    rightClick_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_rightClick_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    rightClick_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_rightClick_1native__JLbwapi_Unit_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_UnitImpl
 * Method:    haltConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_haltConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelAddon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelAddon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelTrain_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelTrain_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelMorph_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelMorph_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelResearch_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelResearch_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    cancelUpgrade_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_cancelUpgrade_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitImpl
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_useTech_1native__JLbwapi_TechType_2
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;Lbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_useTech_1native__JLbwapi_TechType_2Lbwapi_Position_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;Lbwapi/Unit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_useTech_1native__JLbwapi_TechType_2Lbwapi_Unit_2
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_UnitImpl
 * Method:    placeCOP_native
 * Signature: (JLbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitImpl_placeCOP_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_Unitset */

#ifndef _Included_bwapi_Unitset
#define _Included_bwapi_Unitset
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_Unitset
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    getLoadedUnits_native
 * Signature: (J)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getLoadedUnits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    getInterceptors_native
 * Signature: (J)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getInterceptors_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    getLarva_native
 * Signature: (J)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getLarva_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    setClientInfo_native
 * Signature: (JJI)V
 */
JNIEXPORT void JNICALL Java_bwapi_Unitset_setClientInfo_1native__JJI
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     bwapi_Unitset
 * Method:    setClientInfo_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwapi_Unitset_setClientInfo_1native__JII
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwapi_Unitset
 * Method:    getUnitsInRadius_native
 * Signature: (JILbwapi/UnitFilter;)Lbwapi/Unitset;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getUnitsInRadius_1native
  (JNIEnv *, jobject, jlong, jint, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    getClosestUnit_native
 * Signature: (JLbwapi/UnitFilter;I)Lbwapi/Unit;
 */
JNIEXPORT jobject JNICALL Java_bwapi_Unitset_getClosestUnit_1native
  (JNIEnv *, jobject, jlong, jobject, jint);

/*
 * Class:     bwapi_Unitset
 * Method:    issueCommand_native
 * Signature: (JLbwapi/UnitCommand;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_issueCommand_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    attack_native
 * Signature: (JLbwapi/PositionOrUnit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_attack_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    build_native
 * Signature: (JLbwapi/UnitType;Lbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_build_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    buildAddon_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_buildAddon_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    train_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_train_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    morph_native
 * Signature: (JLbwapi/UnitType;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_morph_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    setRallyPoint_native
 * Signature: (JLbwapi/PositionOrUnit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_setRallyPoint_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwapi_Unitset
 * Method:    move_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_move_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    patrol_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_patrol_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    holdPosition_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_holdPosition_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    stop_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_stop_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    follow_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_follow_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    gather_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_gather_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    returnCargo_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_returnCargo_1native
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    repair_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_repair_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    burrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_burrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    unburrow_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_unburrow_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    decloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_decloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    siege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_siege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    unsiege_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_unsiege_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    lift_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_lift_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    load_native
 * Signature: (JLbwapi/Unit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_load_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    unloadAll_native
 * Signature: (JZ)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_unloadAll_1native__JZ
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    unloadAll_native
 * Signature: (JLbwapi/Position;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_unloadAll_1native__JLbwapi_Position_2Z
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    rightClick_native
 * Signature: (JLbwapi/PositionOrUnit;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_rightClick_1native
  (JNIEnv *, jobject, jlong, jobject, jboolean);

/*
 * Class:     bwapi_Unitset
 * Method:    haltConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_haltConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelConstruction_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelConstruction_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelAddon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelAddon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelTrain_native
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelTrain_1native
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelMorph_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelMorph_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelResearch_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelResearch_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    cancelUpgrade_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_cancelUpgrade_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_Unitset
 * Method:    useTech_native
 * Signature: (JLbwapi/TechType;Lbwapi/PositionOrUnit;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_Unitset_useTech_1native
  (JNIEnv *, jobject, jlong, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitSizeType */

#ifndef _Included_bwapi_UnitSizeType
#define _Included_bwapi_UnitSizeType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UnitSizeType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_UnitSizeType_c_1str_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UnitType */

#ifndef _Included_bwapi_UnitType
#define _Included_bwapi_UnitType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UnitType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_UnitType_c_1str_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    getRace_native
 * Signature: (J)Lbwapi/Race;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_getRace_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    requiredTech_native
 * Signature: (J)Lbwapi/TechType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_requiredTech_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    cloakingTech_native
 * Signature: (J)Lbwapi/TechType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_cloakingTech_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    abilities_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_abilities_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    upgrades_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_upgrades_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    armorUpgrade_native
 * Signature: (J)Lbwapi/UpgradeType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_armorUpgrade_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    maxHitPoints_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_maxHitPoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    maxShields_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_maxShields_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    maxEnergy_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_maxEnergy_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    armor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_armor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    mineralPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_mineralPrice_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    gasPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_gasPrice_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    buildTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_buildTime_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    supplyRequired_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_supplyRequired_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    supplyProvided_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_supplyProvided_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    spaceRequired_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_spaceRequired_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    spaceProvided_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_spaceProvided_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    buildScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_buildScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    destroyScore_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_destroyScore_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    size_native
 * Signature: (J)Lbwapi/UnitSizeType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_size_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    tileWidth_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_tileWidth_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    tileHeight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_tileHeight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    dimensionLeft_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_dimensionLeft_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    dimensionUp_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_dimensionUp_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    dimensionRight_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_dimensionRight_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    dimensionDown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_dimensionDown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    seekRange_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_seekRange_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    sightRange_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_sightRange_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    groundWeapon_native
 * Signature: (J)Lbwapi/WeaponType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_groundWeapon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    maxGroundHits_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_maxGroundHits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    airWeapon_native
 * Signature: (J)Lbwapi/WeaponType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UnitType_airWeapon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    maxAirHits_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_maxAirHits_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    topSpeed_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwapi_UnitType_topSpeed_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    acceleration_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_acceleration_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    haltDistance_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_haltDistance_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    turnRadius_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UnitType_turnRadius_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    canProduce_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_canProduce_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    canAttack_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_canAttack_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    canMove_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_canMove_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isFlyer_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isFlyer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    regeneratesHP_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_regeneratesHP_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isSpellcaster_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isSpellcaster_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    hasPermanentCloak_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_hasPermanentCloak_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isInvincible_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isInvincible_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isOrganic_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isOrganic_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isMechanical_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isMechanical_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isRobotic_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isRobotic_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isDetector_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isDetector_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isResourceContainer_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isResourceContainer_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isResourceDepot_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isResourceDepot_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isRefinery_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isRefinery_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isWorker_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isWorker_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    requiresPsi_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_requiresPsi_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    requiresCreep_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_requiresCreep_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isTwoUnitsInOneEgg_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isTwoUnitsInOneEgg_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isBurrowable_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isBurrowable_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isCloakable_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isCloakable_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isBuilding_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isBuilding_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isAddon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isAddon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isFlyingBuilding_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isFlyingBuilding_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isNeutral_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isNeutral_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isHero_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isHero_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isPowerup_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isPowerup_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isBeacon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isBeacon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isFlagBeacon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isFlagBeacon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isSpecialBuilding_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isSpecialBuilding_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isSpell_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isSpell_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    producesLarva_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_producesLarva_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    isMineralField_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_isMineralField_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UnitType
 * Method:    canBuildAddon_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_UnitType_canBuildAddon_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_UpgradeType */

#ifndef _Included_bwapi_UpgradeType
#define _Included_bwapi_UpgradeType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_UpgradeType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_UpgradeType_c_1str_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    getRace_native
 * Signature: (J)Lbwapi/Race;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UpgradeType_getRace_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    mineralPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_mineralPrice_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    mineralPrice_native
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_mineralPrice_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UpgradeType
 * Method:    mineralPriceFactor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_mineralPriceFactor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    gasPrice_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_gasPrice_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    gasPrice_native
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_gasPrice_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UpgradeType
 * Method:    gasPriceFactor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_gasPriceFactor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    upgradeTime_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_upgradeTime_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    upgradeTime_native
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_upgradeTime_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UpgradeType
 * Method:    upgradeTimeFactor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_upgradeTimeFactor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    maxRepeats_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_UpgradeType_maxRepeats_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    whatUpgrades_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UpgradeType_whatUpgrades_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    whatsRequired_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UpgradeType_whatsRequired_1native__J
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_UpgradeType
 * Method:    whatsRequired_native
 * Signature: (JI)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UpgradeType_whatsRequired_1native__JI
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     bwapi_UpgradeType
 * Method:    whatUses_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwapi_UpgradeType_whatUses_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_WalkPosition */

#ifndef _Included_bwapi_WalkPosition
#define _Included_bwapi_WalkPosition
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi_WeaponType */

#ifndef _Included_bwapi_WeaponType
#define _Included_bwapi_WeaponType
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwapi_WeaponType
 * Method:    c_str_native
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_bwapi_WeaponType_c_1str_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    getTech_native
 * Signature: (J)Lbwapi/TechType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_WeaponType_getTech_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    whatUses_native
 * Signature: (J)Lbwapi/UnitType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_WeaponType_whatUses_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    damageAmount_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_damageAmount_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    damageBonus_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_damageBonus_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    damageCooldown_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_damageCooldown_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    damageFactor_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_damageFactor_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    upgradeType_native
 * Signature: (J)Lbwapi/UpgradeType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_WeaponType_upgradeType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    damageType_native
 * Signature: (J)Lbwapi/DamageType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_WeaponType_damageType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    explosionType_native
 * Signature: (J)Lbwapi/ExplosionType;
 */
JNIEXPORT jobject JNICALL Java_bwapi_WeaponType_explosionType_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    minRange_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_minRange_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    maxRange_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_maxRange_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    innerSplashRadius_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_innerSplashRadius_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    medianSplashRadius_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_medianSplashRadius_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    outerSplashRadius_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwapi_WeaponType_outerSplashRadius_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsAir_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsAir_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsGround_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsGround_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsMechanical_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsMechanical_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsOrganic_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsOrganic_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsNonBuilding_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsNonBuilding_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsNonRobotic_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsNonRobotic_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsTerrain_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsTerrain_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsOrgOrMech_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsOrgOrMech_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwapi_WeaponType
 * Method:    targetsOwn_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwapi_WeaponType_targetsOwn_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi__Key */

#ifndef _Included_bwapi__Key
#define _Included_bwapi__Key
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwapi__MouseButton */

#ifndef _Included_bwapi__MouseButton
#define _Included_bwapi__MouseButton
#ifdef __cplusplus
extern "C" {
#endif
#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_BaseLocation */

#ifndef _Included_bwta_BaseLocation
#define _Included_bwta_BaseLocation
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_BaseLocation
 * Method:    getPosition_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_BaseLocation_getPosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    getTilePosition_native
 * Signature: (J)Lbwapi/TilePosition;
 */
JNIEXPORT jobject JNICALL Java_bwta_BaseLocation_getTilePosition_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    getRegion_native
 * Signature: (J)Lbwta/Region;
 */
JNIEXPORT jobject JNICALL Java_bwta_BaseLocation_getRegion_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    minerals_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwta_BaseLocation_minerals_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    gas_native
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_bwta_BaseLocation_gas_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    getGroundDistance_native
 * Signature: (JLbwta/BaseLocation;)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_BaseLocation_getGroundDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwta_BaseLocation
 * Method:    getAirDistance_native
 * Signature: (JLbwta/BaseLocation;)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_BaseLocation_getAirDistance_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwta_BaseLocation
 * Method:    isIsland_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_BaseLocation_isIsland_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    isMineralOnly_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_BaseLocation_isMineralOnly_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_BaseLocation
 * Method:    isStartLocation_native
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_BaseLocation_isStartLocation_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_BWTA */

#ifndef _Included_bwta_BWTA
#define _Included_bwta_BWTA
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_BWTA
 * Method:    readMap
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_bwta_BWTA_readMap
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    analyze
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_bwta_BWTA_analyze
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getRegions
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getRegions
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getChokepoints
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getChokepoints
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getBaseLocations
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getBaseLocations
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getStartLocations
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getStartLocations
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getUnwalkablePolygons
 * Signature: ()Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getUnwalkablePolygons
  (JNIEnv *, jclass);

/*
 * Class:     bwta_BWTA
 * Method:    getStartLocation
 * Signature: (Lbwapi/Player;)Lbwta/BaseLocation;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getStartLocation
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getRegion
 * Signature: (II)Lbwta/Region;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getRegion__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     bwta_BWTA
 * Method:    getRegion
 * Signature: (Lbwapi/TilePosition;)Lbwta/Region;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getRegion__Lbwapi_TilePosition_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getRegion
 * Signature: (Lbwapi/Position;)Lbwta/Region;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getRegion__Lbwapi_Position_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestChokepoint
 * Signature: (II)Lbwta/Chokepoint;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestChokepoint__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestChokepoint
 * Signature: (Lbwapi/TilePosition;)Lbwta/Chokepoint;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestChokepoint__Lbwapi_TilePosition_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestChokepoint
 * Signature: (Lbwapi/Position;)Lbwta/Chokepoint;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestChokepoint__Lbwapi_Position_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestBaseLocation
 * Signature: (II)Lbwta/BaseLocation;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestBaseLocation__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestBaseLocation
 * Signature: (Lbwapi/TilePosition;)Lbwta/BaseLocation;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestBaseLocation__Lbwapi_TilePosition_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestBaseLocation
 * Signature: (Lbwapi/Position;)Lbwta/BaseLocation;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestBaseLocation__Lbwapi_Position_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestUnwalkablePolygon
 * Signature: (II)Lbwta/Polygon;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestUnwalkablePolygon__II
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestUnwalkablePolygon
 * Signature: (Lbwapi/TilePosition;)Lbwta/Polygon;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestUnwalkablePolygon__Lbwapi_TilePosition_2
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getNearestUnwalkablePosition
 * Signature: (Lbwapi/Position;)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_BWTA_getNearestUnwalkablePosition
  (JNIEnv *, jclass, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    isConnected
 * Signature: (IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_BWTA_isConnected__IIII
  (JNIEnv *, jclass, jint, jint, jint, jint);

/*
 * Class:     bwta_BWTA
 * Method:    isConnected
 * Signature: (Lbwapi/TilePosition;Lbwapi/TilePosition;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_BWTA_isConnected__Lbwapi_TilePosition_2Lbwapi_TilePosition_2
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     bwta_BWTA
 * Method:    getGroundDistance
 * Signature: (Lbwapi/TilePosition;Lbwapi/TilePosition;)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_BWTA_getGroundDistance
  (JNIEnv *, jclass, jobject, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_Chokepoint */

#ifndef _Included_bwta_Chokepoint
#define _Included_bwta_Chokepoint
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_Chokepoint
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_Chokepoint_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Chokepoint
 * Method:    getWidth_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_Chokepoint_getWidth_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_Polygon */

#ifndef _Included_bwta_Polygon
#define _Included_bwta_Polygon
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_Polygon
 * Method:    getArea_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_Polygon_getArea_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Polygon
 * Method:    getPerimeter_native
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_Polygon_getPerimeter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Polygon
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_Polygon_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Polygon
 * Method:    isInside_native
 * Signature: (JLbwapi/Position;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_Polygon_isInside_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwta_Polygon
 * Method:    getNearestPoint_native
 * Signature: (JLbwapi/Position;)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_Polygon_getNearestPoint_1native
  (JNIEnv *, jobject, jlong, jobject);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_RectangleArray */

#ifndef _Included_bwta_RectangleArray
#define _Included_bwta_RectangleArray
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_RectangleArray
 * Method:    getItem_native
 * Signature: (JII)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_RectangleArray_getItem_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwta_RectangleArray
 * Method:    getItemSafe_native
 * Signature: (JII)D
 */
JNIEXPORT jdouble JNICALL Java_bwta_RectangleArray_getItemSafe_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwta_RectangleArray
 * Method:    setItem_native
 * Signature: (JIID)V
 */
JNIEXPORT void JNICALL Java_bwta_RectangleArray_setItem_1native
  (JNIEnv *, jobject, jlong, jint, jint, jdouble);

/*
 * Class:     bwta_RectangleArray
 * Method:    resize_native
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_bwta_RectangleArray_resize_1native
  (JNIEnv *, jobject, jlong, jint, jint);

/*
 * Class:     bwta_RectangleArray
 * Method:    saveToFile_native
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_bwta_RectangleArray_saveToFile_1native
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     bwta_RectangleArray
 * Method:    setTo_native
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_bwta_RectangleArray_setTo_1native
  (JNIEnv *, jobject, jlong, jdouble);

/*
 * Class:     bwta_RectangleArray
 * Method:    setBorderTo_native
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_bwta_RectangleArray_setBorderTo_1native
  (JNIEnv *, jobject, jlong, jdouble);

#ifdef __cplusplus
}
#endif
#endif
/* Header for class bwta_Region */

#ifndef _Included_bwta_Region
#define _Included_bwta_Region
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     bwta_Region
 * Method:    getPolygon_native
 * Signature: (J)Lbwta/Polygon;
 */
JNIEXPORT jobject JNICALL Java_bwta_Region_getPolygon_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Region
 * Method:    getCenter_native
 * Signature: (J)Lbwapi/Position;
 */
JNIEXPORT jobject JNICALL Java_bwta_Region_getCenter_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Region
 * Method:    getChokepoints_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_Region_getChokepoints_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Region
 * Method:    getBaseLocations_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_Region_getBaseLocations_1native
  (JNIEnv *, jobject, jlong);

/*
 * Class:     bwta_Region
 * Method:    isReachable_native
 * Signature: (JLbwta/Region;)Z
 */
JNIEXPORT jboolean JNICALL Java_bwta_Region_isReachable_1native
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     bwta_Region
 * Method:    getReachableRegions_native
 * Signature: (J)Ljava/util/List;
 */
JNIEXPORT jobject JNICALL Java_bwta_Region_getReachableRegions_1native
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
